name: Github Actions for building, testing and pushing to Docker Hub

on:
  push:
    branches:
      - master
jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checking out master branch
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./client
          file: "./client/Dockerfile.dev"
          tags: multi_client:latest
          load: true
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Running tests
        uses: addnab/docker-run-action@v3
        with:
          image: multi_client:latest
          run: CI=true npm run test

  build_and_push_to_docker_hub:
    needs: build_and_test
    runs-on: ubuntu-latest

    steps:
      - name: Checking out master branch
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image for client
        uses: docker/build-push-action@v5
        with:
          context: ./client
          file: "./client/Dockerfile"
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/multi_client:latest
          load: true
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Docker image for nginx
        uses: docker/build-push-action@v5
        with:
          context: ./nginx
          file: "./nginx/Dockerfile"
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/multi_nginx:latest
          load: true
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Docker image for server
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: "./server/Dockerfile"
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/multi_server:latest
          load: true
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Docker image for worker
        uses: docker/build-push-action@v5
        with:
          context: ./worker
          file: "./worker/Dockerfile"
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/multi_worker:latest
          load: true
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Login in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push client image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/multi_client:latest
      - name: Push nginx image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/multi_nginx:latest
      - name: Push server image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/multi_server:latest
      - name: Push worker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/multi_worker:latest

  deploy_to_aws:
    needs: build_and_push_to_docker_hub
    runs-on: ubuntu-latest

    steps:
      - name: Checking out master branch
        uses: actions/checkout@v4

      - name: Create ZIP deployment package
        run: zip deploy_package.zip ./docker-compose.yml

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: "eu-north-1"

      - name: Upload package to S3 bucket
        run: aws s3 cp deploy_package.zip s3://elasticbeanstalk-eu-north-1-767397925184/docker-multi/

      - name: Create new ElasticBeanstalk Application Version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name multi-docker \
          --source-bundle S3Bucket="elasticbeanstalk-eu-north-1-767397925184",S3Key="./docker-multi/deploy_package.zip" \
          --version-label "ver-${{ github.sha }}" \
          --description "commit-sha-${{ github.sha }}"

      - name: Deploy new ElasticBeanstalk Application Version
        run: aws elasticbeanstalk update-environment --environment-name Multi-docker-env --version-label "ver-${{ github.sha }}"
